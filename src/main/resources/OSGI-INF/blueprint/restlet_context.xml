<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">



<!--  RabbitMQ connection factory configuration. In real life scenario, this should be externalised to configuration files -->
<bean id="rabbitMQConnectionFactory" class="com.rabbitmq.client.ConnectionFactory">
  <property name="host" value="localhost"/>
  <property name="port" value="5672"/>
  <property name="username" value="guest"/>
  <property name="password" value="guest"/>
</bean>


<!--  Camel Context for route execution -->
<camelContext id="RabbitMQContextRestlet" xmlns="http://camel.apache.org/schema/blueprint">
  <restConfiguration component="restlet" host="0.0.0.0" port="9091" bindingMode="json"/>
  <rest consumes="application/json" produces="application/json">
    <description>Message REST Service - restlet
Rest API for this context, currently only 1 operation, could add more easily
put operation on the /message path calls direct: endpoint. See route below</description>
    <get uri="/rs/ipblock/{message}" type="org.demo.camel.rabbitmq.Message">
      <description>Send JSON Message to Rabbit MQ</description>
      <to uri="direct:addMessage"/>
    </get>
  </rest>
  <route id="sendToQueueRoute">
    <from uri="direct:addMessage"/>
    <setBody>
      <simple>${header.message}</simple>
    </setBody>
    <log message="MSG: ${body}" loggingLevel="INFO"/>
    <to uri="rabbitmq://localhost/EMPLOYEE?autoAck=true"/>
  </route>
</camelContext>

</blueprint>
